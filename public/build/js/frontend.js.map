{"version":3,"sources":["plugins.js","main.js"],"names":[],"mappingsxJA;AACA;AACA;AACA","file":"frontend.js","sourcesContent":["\n//blueimp/jquery-file-upload\n(function ($) {\n    'use strict';\n    var avatar;\n    var decodeHtmlEntity = function(str) {\n        return str.replace(/&#(\\d+);/g, function(match, dec) {\n          return String.fromCharCode(dec);\n        });\n      };\n\n      var encodeHtmlEntity = function(str) {\n        var buf = [];\n        for (var i=str.length-1;i>=0;i--) {\n          buf.unshift(['&#', str[i].charCodeAt(), ';'].join(''));\n        }\n        return buf.join('');\n      };\n    $('#fileupload').fileupload({\n        dataType: 'json',\n        done: function (e, data) {\n            \n            avatar = data.result.file.dimensions.square100.filedir;\n            var html = data.result.file.original_filename;\n            var img = $('<option>'); //Equivalent: $(document.createElement('img'))\n                img.val(data.result.id);\n                img.attr('data-img-src', '/'+ avatar);\n                img.prop('selected', true);\n                img.html(html);\n                img.appendTo('#mediagrid');\n                $('img#avatar').prop('src', '/'+ avatar);\n                $(\"select#mediagrid\").imagepicker({\n                    hide_select : true,\n                    show_label  : false\n                  })\n           //$('<p/>').text(data.result.original_filedir).appendTo('#medialist');\n            $.each(data.result, function (index, file) {\n                //console.log(data.result);\n               // console.log(index);\n               // console.log(file);\n                //$('<p/>').text(file.original_filedir).appendTo('#medialist');\n            });\n        },\n        progressall: function (e, data) {\n            var progress = parseInt(data.loaded / data.total * 100, 10);\n            $('#progress .progress-bar').css(\n                'width',\n                progress + '%'\n            );\n        }\n    }).prop('disabled', !$.support.fileInput)\n        .parent().addClass($.support.fileInput ? undefined : 'disabled');\n    \n    $(\"img#avatar\").on('change',function()\n        {\n           console.log($(this).attr('src'));\n        });\n        \n    $(\"select#mediagrid\").imagepicker({\n          hide_select : true,\n          show_label  : false\n        })\n    $(\"#add-link\").click(function(){\n        var img = $( \"#mediagrid option:selected\" ).attr('data-img-src');\n        $(\"img#avatar\").attr('src', img);\n        $(\"img.profile-avatar\").attr('src', img);\n        $(\"#avatar_url\").val(img);\n    });\n    $('#mediabox').on(\"click\", \".pagination>li>a\", function (e) {\n            e.preventDefault();\n            getPosts($(this).attr('href'));\n        });\n    \n\n    function getPosts(page) {\n        $.ajax({\n            url : page,\n            dataType: 'json',\n\t}).done(function (data) {\n            $('#mediabox').html(data);\n            $(\"select#mediagrid\").imagepicker({\n                hide_select : true,\n                show_label  : false\n              })\n\t}).fail(function () {\n            alert('Images could not be loaded.');\n\t});\n    }\n}(jQuery));\n\n// Avoid `console` errors in browsers that lack a console.\n(function() {\n    var method;\n    var noop = function () {};\n    var methods = [\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n    ];\n    var length = methods.length;\n    var console = (window.console = window.console || {});\n\n    while (length--) {\n        method = methods[length];\n\n        // Only stub undefined methods.\n        if (!console[method]) {\n            console[method] = noop;\n        }\n    }\n}());\n\n// Place any jQuery/helper plugins in here.\n$(function(){\n    /*\n     Allows you to add data-method=\"METHOD to links to automatically inject a form with the method on click\n     Example: <a href=\"{{route('customers.destroy', $customer->id)}}\" data-method=\"delete\" name=\"delete_item\">Delete</a>\n     Injects a form with that's fired on click of the link with a DELETE request.\n     Good because you don't have to dirty your HTML with delete forms everywhere.\n     */\n    $('[data-method]').append(function(){\n        return \"\\n\"+\n        \"<form action='\"+$(this).attr('href')+\"' method='POST' name='delete_item' style='display:none'>\\n\"+\n        \"   <input type='hidden' name='_method' value='\"+$(this).attr('data-method')+\"'>\\n\"+\n        \"   <input type='hidden' name='_token' value='\"+$('meta[name=\"_token\"]').attr('content')+\"'>\\n\"+\n        \"</form>\\n\"\n    })\n        .removeAttr('href')\n        .attr('style','cursor:pointer;')\n        .attr('onclick','$(this).find(\"form\").submit();');\n\n    /*\n     Generic are you sure dialog\n     */\n    $('form[name=delete_item]').submit(function(){\n        return confirm(\"Are you sure you want to delete this item?\");\n    });\n\n    /*\n     Bind all bootstrap tooltips\n     */\n    $(\"[data-toggle=\\\"tooltip\\\"]\").tooltip();\n    $(\"[data-toggle=\\\"popover\\\"]\").popover();\n    //This closes the popover when its clicked away from\n    $('body').on('click', function (e) {\n        $('[data-toggle=\"popover\"]').each(function () {\n            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {\n                $(this).popover('hide');\n            }\n        });\n    });\n});","$(function() {\n\n   \n});"],"sourceRoot":"/source/"}